{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An Amazon Linux 2 bastion accessible via Systems Manager Session Manager.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": { "default": "Bastion Configuration" },
          "Parameters": ["ImageId", "InstanceType", "KeyName"]
        },
        {
          "Label": { "default": "Network Configuration" },
          "Parameters": ["VpcId", "SubnetId", "IncludeElasticIp"]
        }
      ],
      "ParameterLabels": {
        "ImageId": { "default": "Image ID" },
        "InstanceType": { "default": "Instance Type" },
        "KeyName": { "default": "Key Name" },
        "VpcId": { "default": "VPC" },
        "SubnetId": { "default": "Subnet" },
        "IncludeElasticIp": { "default": "Include Elastic IP" }
      }
    }
  },
  "Parameters": {
    "ImageId": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2",
      "Description": "The SSM parameter containing the Amazon Machine Image (AMI) to use for the bastion."
    },
    "InstanceType": {
      "Type": "String",
      "Default": "t3.micro",
      "AllowedValues": [
        "t3.nano",
        "t3.micro",
        "t3.small",
        "t3.medium",
        "t3.large",
        "t3.xlarge",
        "t3.2xlarge",
        "t3a.nano",
        "t3a.micro",
        "t3a.small",
        "t3a.medium",
        "t3a.large",
        "t3a.xlarge",
        "t3a.2xlarge"
      ],
      "Description": "The EC2 Instance Type to launch the bastion as."
    },
    "KeyName": {
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Description": "The name of the Amazon EC2 Key Pair to use for the bastion."
    },
    "VpcId": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "The VPC to create the bastion in."
    },
    "SubnetId": {
      "Type": "AWS::EC2::Subnet::Id",
      "Description": "The subnet to create the bastion in."
    },
    "IncludeElasticIp": {
      "Type": "String",
      "AllowedValues": [true, false],
      "Default": false,
      "Description": "Assigns an Elastic IP to the bastion if set to 'true'."
    }
  },
  "Mappings": {},
  "Conditions": {
    "CreateElasticIp": { "Fn::Equals": [{ "Ref": "IncludeElasticIp" }, true] }
  },
  "Resources": {
    "SSMSessionManagerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": { "Service": "ec2.amazonaws.com" },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Description": {
          "Fn::Sub": "${AWS::StackName} - SSM Session Manager Role"
        },
        "Policies": [
          {
            "PolicyName": "SessionManagerPermissions",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ssmmessages:CreateControlChannel",
                    "ssmmessages:CreateDataChannel",
                    "ssmmessages:OpenControlChannel",
                    "ssmmessages:OpenDataChannel",
                    "ssm:UpdateInstanceInformation"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:PutLogEvents",
                    "logs:DescribeLogGroups",
                    "logs:DescribeLogStreams"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": ["s3:PutObject"],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": ["s3:GetEncryptionConfiguration"],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": "kms:GenerateDataKey",
                  "Resource": "*"
                }
              ]
            }
          }
        ],
        "RoleName": { "Fn::Sub": "${AWS::StackName}-SSMSessionManagerRole" }
      }
    },
    "InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "InstanceProfileName": {
          "Fn::Sub": "${AWS::StackName}-SSMSessionManagerRole"
        },
        "Roles": [{ "Ref": "SSMSessionManagerRole" }]
      }
    },
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {
          "Fn::Sub": "Security Group for EC2 Instance:${AWS::StackName}"
        },
        "GroupName": {
          "Fn::Sub": "${AWS::StackName} - Bastion Security Group"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": { "Fn::Sub": "${AWS::StackName} - Bastion Security Group" }
          }
        ],
        "VpcId": { "Ref": "VpcId" }
      }
    },
    "EC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "IamInstanceProfile": { "Ref": "InstanceProfile" },
        "ImageId": { "Ref": "ImageId" },
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "SecurityGroupIds": [{ "Ref": "SecurityGroup" }],
        "SubnetId": { "Ref": "SubnetId" },
        "Tags": [{ "Key": "Name", "Value": { "Fn::Sub": "${AWS::StackName}" } }]
      }
    },
    "EC2InstanceElasticIp": {
      "Condition": "CreateElasticIp",
      "Type": "AWS::EC2::EIP"
    },
    "EC2InstanceElasticIpAssociation": {
      "Condition": "CreateElasticIp",
      "Type": "AWS::EC2::EIPAssociation",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": ["EC2InstanceElasticIp", "AllocationId"]
        },
        "InstanceId": { "Ref": "EC2Instance" }
      }
    }
  },
  "Outputs": {
    "SecurityGroup": {
      "Description": "The resource ID of the Security Group containing the bastion.",
      "Value": { "Ref": "SecurityGroup" }
    },
    "Instance": {
      "Description": "The resource ID of the EC2 Instance of the bastion.",
      "Value": { "Ref": "EC2Instance" }
    },
    "PrivateDnsName": {
      "Description": "The private DNS name of the bastion.",
      "Value": { "Fn::GetAtt": ["EC2Instance", "PrivateDnsName"] }
    },
    "PublicDnsName": {
      "Description": "The public DNS name of the bastion.",
      "Value": { "Fn::GetAtt": ["EC2Instance", "PublicDnsName"] }
    }
  }
}
