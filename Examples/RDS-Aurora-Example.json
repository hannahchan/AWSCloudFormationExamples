{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An Aurora database cluster.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": { "default": "Credentials" },
          "Parameters": ["MasterUsername", "MasterUserPassword"]
        },
        {
          "Label": { "default": "Cluster Configuration" },
          "Parameters": [
            "Engine",
            "DBInstanceClass",
            "IncludeReplica",
            "DeletionProtection"
          ]
        },
        {
          "Label": { "default": "Network Connectivity" },
          "Parameters": ["Vpc", "SubnetIds"]
        },
        {
          "Label": { "default": "Maintenance and Backup" },
          "Parameters": ["AutoMinorVersionUpgrade", "BackupRetentionPeriod"]
        },
        {
          "Label": { "default": "Encryption" },
          "Parameters": ["StorageEncrypted", "KmsKeyId"]
        },
        {
          "Label": { "default": "Enhanced Monitoring" },
          "Parameters": ["MonitoringInterval"]
        },
        {
          "Label": { "default": "Performance Insights" },
          "Parameters": [
            "EnablePerformanceInsights",
            "PerformanceInsightsRetentionPeriod",
            "PerformanceInsightsKMSKeyId"
          ]
        },
        {
          "Label": { "default": "Parameter Groups" },
          "Parameters": ["DBClusterParameterGroupName", "DBParameterGroupName"]
        }
      ],
      "ParameterLabels": {
        "Vpc": { "default": "VPC" },
        "SubnetIds": { "default": "Subnet IDs" },
        "Engine": { "default": "Database Engine" },
        "DBInstanceClass": { "default": "Database Instance Class" },
        "IncludeReplica": { "default": "Include Replica" },
        "DeletionProtection": { "default": "Deletion Protection" },
        "StorageEncrypted": { "default": "Storage Encrypted" },
        "KmsKeyId": { "default": "KMS Key" },
        "MasterUsername": { "default": "Master Username" },
        "MasterUserPassword": { "default": "Master User Password" },
        "AutoMinorVersionUpgrade": { "default": "Auto Minor Version Upgrade" },
        "BackupRetentionPeriod": { "default": "Backup Retention Period" },
        "MonitoringInterval": { "default": "Enhanced Monitoring Interval" },
        "EnablePerformanceInsights": {
          "default": "Enable Performance Insights"
        },
        "PerformanceInsightsKMSKeyId": {
          "default": "Performance Insights KMS Key"
        },
        "PerformanceInsightsRetentionPeriod": {
          "default": "Performance Insights Retention Period"
        },
        "DBClusterParameterGroupName": {
          "default": "Database Cluster Parameter Group Name"
        },
        "DBParameterGroupName": { "default": "Database Parameter Group Name" }
      }
    }
  },
  "Parameters": {
    "MasterUsername": {
      "Type": "String",
      "Default": "",
      "Description": "The username for the master user of the database cluster."
    },
    "MasterUserPassword": {
      "Type": "String",
      "NoEcho": true,
      "Description": "The password for the master user of the database cluster."
    },
    "Engine": {
      "Type": "String",
      "Default": "aurora",
      "AllowedValues": ["aurora", "aurora-mysql", "aurora-postgresql"],
      "Description": "The database engine to be used for the database cluster."
    },
    "DBInstanceClass": {
      "Type": "String",
      "Default": "db.t3.medium",
      "AllowedValues": [
        "db.r4.large",
        "db.r4.xlarge",
        "db.r4.2xlarge",
        "db.r4.4xlarge",
        "db.r4.8xlarge",
        "db.r4.16xlarge",
        "db.r5.large",
        "db.r5.xlarge",
        "db.r5.2xlarge",
        "db.r5.4xlarge",
        "db.r5.8xlarge",
        "db.r5.12xlarge",
        "db.r5.16xlarge",
        "db.r5.24xlarge",
        "db.t3.medium"
      ],
      "Description": "The database instance class to be used for the database instances."
    },
    "IncludeReplica": {
      "Type": "String",
      "Default": false,
      "AllowedValues": [true, false],
      "Description": "Creates database a replica if set to 'true'."
    },
    "DeletionProtection": {
      "Type": "String",
      "Default": false,
      "AllowedValues": [true, false],
      "Description": "Enables deletion protection if set to 'true'."
    },
    "Vpc": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "The VPC to create the database in."
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The list of subnets to create database instances in."
    },
    "AutoMinorVersionUpgrade": {
      "Type": "String",
      "Default": true,
      "AllowedValues": [true, false],
      "Description": "Enables minor engine version upgrades during the maintenance window if set to 'true'."
    },
    "BackupRetentionPeriod": {
      "Type": "Number",
      "Default": 7,
      "MinValue": 1,
      "MaxValue": 35,
      "Description": "The number of days for which automated backups are retained."
    },
    "StorageEncrypted": {
      "Type": "String",
      "Default": true,
      "AllowedValues": [true, false],
      "Description": "Creates a encrypted database cluster if set to 'true'."
    },
    "KmsKeyId": {
      "Type": "String",
      "Default": "",
      "Description": "The ARN of the KMS key to use for the encryption of the cluster. Leave blank to use the default KMS key."
    },
    "MonitoringInterval": {
      "Type": "Number",
      "Default": 0,
      "AllowedValues": [0, 1, 5, 10, 15, 30, 60],
      "Description": "The granularity in seconds to be used for Enhanced Monitoring. Enhanced Monitoring is disabled if the value is set to '0'."
    },
    "EnablePerformanceInsights": {
      "Type": "String",
      "Default": false,
      "AllowedValues": [true, false],
      "Description": "Enables Performance Insights if set to 'true'."
    },
    "PerformanceInsightsKMSKeyId": {
      "Type": "String",
      "Default": "",
      "Description": "The ARN of the KMS key to use for the encryption of Performance Insights data. Leave blank to use the default KMS key."
    },
    "PerformanceInsightsRetentionPeriod": {
      "Type": "Number",
      "Default": 7,
      "AllowedValues": [7, 731],
      "Description": "By default Performance Insights data is retained for 7 days. The only other option is for 2 years (731 days)."
    },
    "DBClusterParameterGroupName": {
      "Type": "String",
      "Default": "",
      "Description": "The name of the database cluster parameter group to associate with this database cluster. Leave blank to use default."
    },
    "DBParameterGroupName": {
      "Type": "String",
      "Default": "",
      "Description": "The name of the database parameter group to associate with the database instances in this cluster. Leave blank to use default."
    }
  },
  "Mappings": {
    "Engine": {
      "aurora": {
        "DefaultDBClusterParameterGroupName": "default.aurora5.6",
        "DefaultDBParameterGroupName": "default.aurora5.6",
        "DefaultMasterUsername": "root",
        "Family": "aurora5.6",
        "Port": 3306
      },
      "aurora-mysql": {
        "DefaultDBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DefaultDBParameterGroupName": "default.aurora-mysql5.7",
        "DefaultMasterUsername": "root",
        "Family": "aurora-mysql5.7",
        "Port": 3306
      },
      "aurora-postgresql": {
        "DefaultDBClusterParameterGroupName": "default.aurora-postgresql11",
        "DefaultDBParameterGroupName": "default.aurora-postgresql11",
        "DefaultMasterUsername": "postgres",
        "Family": "aurora-postgresql11",
        "Port": 5432
      }
    }
  },
  "Conditions": {
    "CreateReplica": { "Fn::Equals": [{ "Ref": "IncludeReplica" }, true] },
    "EnableEnhancedMonitoring": {
      "Fn::Not": [{ "Fn::Equals": [{ "Ref": "MonitoringInterval" }, 0] }]
    },
    "UseDefaultDBClusterParameterGroupName": {
      "Fn::Equals": [{ "Ref": "DBClusterParameterGroupName" }, ""]
    },
    "UseDefaultDBParameterGroupName": {
      "Fn::Equals": [{ "Ref": "DBParameterGroupName" }, ""]
    },
    "UseDefaultMasterUsername": {
      "Fn::Equals": [{ "Ref": "MasterUsername" }, ""]
    },
    "UseKmsKey": {
      "Fn::And": [
        { "Fn::Equals": [{ "Ref": "StorageEncrypted" }, true] },
        { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "KmsKeyId" }, ""] }] }
      ]
    },
    "UseKmsKeyForPerformanceInsights": {
      "Fn::And": [
        { "Fn::Equals": [{ "Ref": "EnablePerformanceInsights" }, true] },
        {
          "Fn::Not": [
            { "Fn::Equals": [{ "Ref": "PerformanceInsightsKMSKeyId" }, ""] }
          ]
        }
      ]
    },
    "UsePerformanceInsightsRetentionPeriod": {
      "Fn::Equals": [{ "Ref": "EnablePerformanceInsights" }, true]
    }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {
          "Fn::Sub": "Controls access to Aurora database - ${AWS::StackName}"
        },
        "GroupName": {
          "Fn::Sub": "${AWS::StackName} - Database Security Group"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Database Security Group"
            }
          }
        ],
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": {
          "Fn::Sub": "Database Subnets for Aurora database - ${AWS::StackName}"
        },
        "SubnetIds": { "Ref": "SubnetIds" }
      }
    },
    "EnhancedMonitoringRole": {
      "Type": "AWS::IAM::Role",
      "Condition": "EnableEnhancedMonitoring",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "",
              "Effect": "Allow",
              "Principal": { "Service": "monitoring.rds.amazonaws.com" },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Description": {
          "Fn::Sub": "${AWS::StackName} - RDS Enhanced Monitoring Role"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"
        ]
      }
    },
    "DBCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "BackupRetentionPeriod": { "Ref": "BackupRetentionPeriod" },
        "DBClusterParameterGroupName": {
          "Fn::If": [
            "UseDefaultDBClusterParameterGroupName",
            {
              "Fn::FindInMap": [
                "Engine",
                { "Ref": "Engine" },
                "DefaultDBClusterParameterGroupName"
              ]
            },
            { "Ref": "DBClusterParameterGroupName" }
          ]
        },
        "DBSubnetGroupName": { "Ref": "DBSubnetGroup" },
        "DeletionProtection": { "Ref": "DeletionProtection" },
        "Engine": { "Ref": "Engine" },
        "KmsKeyId": {
          "Fn::If": [
            "UseKmsKey",
            { "Ref": "KmsKeyId" },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "MasterUsername": {
          "Fn::If": [
            "UseDefaultMasterUsername",
            {
              "Fn::FindInMap": [
                "Engine",
                { "Ref": "Engine" },
                "DefaultMasterUsername"
              ]
            },
            { "Ref": "MasterUsername" }
          ]
        },
        "MasterUserPassword": { "Ref": "MasterUserPassword" },
        "Port": { "Fn::FindInMap": ["Engine", { "Ref": "Engine" }, "Port"] },
        "StorageEncrypted": { "Ref": "StorageEncrypted" },
        "VpcSecurityGroupIds": [{ "Ref": "SecurityGroup" }]
      }
    },
    "PrimaryDBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "AutoMinorVersionUpgrade": { "Ref": "AutoMinorVersionUpgrade" },
        "DBClusterIdentifier": { "Ref": "DBCluster" },
        "DBInstanceClass": { "Ref": "DBInstanceClass" },
        "DBParameterGroupName": {
          "Fn::If": [
            "UseDefaultDBParameterGroupName",
            {
              "Fn::FindInMap": [
                "Engine",
                { "Ref": "Engine" },
                "DefaultDBParameterGroupName"
              ]
            },
            { "Ref": "DBParameterGroupName" }
          ]
        },
        "Engine": { "Ref": "Engine" },
        "EnablePerformanceInsights": { "Ref": "EnablePerformanceInsights" },
        "MonitoringInterval": { "Ref": "MonitoringInterval" },
        "MonitoringRoleArn": {
          "Fn::If": [
            "EnableEnhancedMonitoring",
            { "Fn::GetAtt": ["EnhancedMonitoringRole", "Arn"] },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "PerformanceInsightsKMSKeyId": {
          "Fn::If": [
            "UseKmsKeyForPerformanceInsights",
            { "Ref": "PerformanceInsightsKMSKeyId" },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "PerformanceInsightsRetentionPeriod": {
          "Fn::If": [
            "UsePerformanceInsightsRetentionPeriod",
            { "Ref": "PerformanceInsightsRetentionPeriod" },
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    },
    "ReplicaDBInstance": {
      "Type": "AWS::RDS::DBInstance",
      "Condition": "CreateReplica",
      "Properties": {
        "AutoMinorVersionUpgrade": { "Ref": "AutoMinorVersionUpgrade" },
        "DBClusterIdentifier": { "Ref": "DBCluster" },
        "DBInstanceClass": { "Ref": "DBInstanceClass" },
        "DBParameterGroupName": {
          "Fn::If": [
            "UseDefaultDBParameterGroupName",
            {
              "Fn::FindInMap": [
                "Engine",
                { "Ref": "Engine" },
                "DefaultDBParameterGroupName"
              ]
            },
            { "Ref": "DBParameterGroupName" }
          ]
        },
        "Engine": { "Ref": "Engine" },
        "EnablePerformanceInsights": { "Ref": "EnablePerformanceInsights" },
        "MonitoringInterval": { "Ref": "MonitoringInterval" },
        "MonitoringRoleArn": {
          "Fn::If": [
            "EnableEnhancedMonitoring",
            { "Fn::GetAtt": ["EnhancedMonitoringRole", "Arn"] },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "PerformanceInsightsKMSKeyId": {
          "Fn::If": [
            "UseKmsKeyForPerformanceInsights",
            { "Ref": "PerformanceInsightsKMSKeyId" },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "PerformanceInsightsRetentionPeriod": {
          "Fn::If": [
            "UsePerformanceInsightsRetentionPeriod",
            { "Ref": "PerformanceInsightsRetentionPeriod" },
            { "Ref": "AWS::NoValue" }
          ]
        }
      }
    }
  },
  "Outputs": {
    "SecurityGroup": {
      "Description": "The resource ID of the database Security Group.",
      "Value": { "Ref": "SecurityGroup" },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-SecurityGroup" } }
    },
    "ClusterEndpoint": {
      "Description": "The read/write endpoint for the database cluster.",
      "Value": { "Fn::GetAtt": ["DBCluster", "Endpoint.Address"] },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-DBClusterEndpoint" } }
    },
    "ClusterReadEndpoint": {
      "Description": "The read endpoint for the database cluster.",
      "Value": { "Fn::GetAtt": ["DBCluster", "ReadEndpoint.Address"] },
      "Export": {
        "Name": { "Fn::Sub": "${AWS::StackName}-DBClusterReadEndpoint" }
      }
    },
    "ClusterPort": {
      "Description": "The port used for the database cluster.",
      "Value": { "Fn::GetAtt": ["DBCluster", "Endpoint.Port"] },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-DBClusterPort" } }
    }
  }
}
