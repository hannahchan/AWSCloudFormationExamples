{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A VPC with public, private and optional data subnets in three availability zones.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "General Configuration"
          },
          "Parameters": [
            "AvailabilityZone1",
            "AvailabilityZone2",
            "AvailabilityZone3",
            "VpcCidrBlock"
          ]
        },
        {
          "Label": {
            "default": "Public Subnet Configuration"
          },
          "Parameters": [
            "PublicSubnet1CidrBlock",
            "PublicSubnet2CidrBlock",
            "PublicSubnet3CidrBlock",
            "MapPublicIpOnLaunch"
          ]
        },
        {
          "Label": {
            "default": "Private Subnet Configuration"
          },
          "Parameters": [
            "PrivateSubnet1CidrBlock",
            "PrivateSubnet2CidrBlock",
            "PrivateSubnet3CidrBlock",
            "IncludeNat"
          ]
        },
        {
          "Label": {
            "default": "Data Subnet Configuration"
          },
          "Parameters": [
            "IncludeDataSubnets",
            "DataSubnet1CidrBlock",
            "DataSubnet2CidrBlock",
            "DataSubnet3CidrBlock"
          ]
        }
      ],
      "ParameterLabels": {
        "AvailabilityZone1": {
          "default": "Availability Zone 1"
        },
        "AvailabilityZone2": {
          "default": "Availability Zone 2"
        },
        "AvailabilityZone3": {
          "default": "Availability Zone 3"
        },
        "VpcCidrBlock": {
          "default": "VPC IPv4 CIDR Block"
        },
        "PublicSubnet1CidrBlock": {
          "default": "Public Subnet 1 IPv4 CIDR Block"
        },
        "PublicSubnet2CidrBlock": {
          "default": "Public Subnet 2 IPv4 CIDR Block"
        },
        "PublicSubnet3CidrBlock": {
          "default": "Public Subnet 3 IPv4 CIDR Block"
        },
        "MapPublicIpOnLaunch": {
          "default": "Map Public IP On Launch"
        },
        "PrivateSubnet1CidrBlock": {
          "default": "Private Subnet 1 IPv4 CIDR Block"
        },
        "PrivateSubnet2CidrBlock": {
          "default": "Private Subnet 2 IPv4 CIDR Block"
        },
        "PrivateSubnet3CidrBlock": {
          "default": "Private Subnet 3 IPv4 CIDR Block"
        },
        "IncludeNat": {
          "default": "Include NAT Gateway"
        },
        "IncludeDataSubnets": {
          "default": "Include Data Subnets"
        },
        "DataSubnet1CidrBlock": {
          "default": "Data Subnet 1 IPv4 CIDR Block"
        },
        "DataSubnet2CidrBlock": {
          "default": "Data Subnet 2 IPv4 CIDR Block"
        },
        "DataSubnet3CidrBlock": {
          "default": "Data Subnet 3 IPv4 CIDR Block"
        }
      }
    }
  },
  "Parameters": {
    "AvailabilityZone1": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Description": "The Availability Zone for Public Subnet 1, Private Subnet 1 and optional Data Subnet 1."
    },
    "AvailabilityZone2": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Description": "The Availability Zone for Public Subnet 2, Private Subnet 2 and optional Data Subnet 2."
    },
    "AvailabilityZone3": {
      "Type": "AWS::EC2::AvailabilityZone::Name",
      "Description": "The Availability Zone for Public Subnet 3, Private Subnet 3 and optional Data Subnet 3."
    },
    "VpcCidrBlock": {
      "Type": "String",
      "Default": "192.168.0.0/16",
      "Description": "The IPv4 CIDR block to be used for the VPC.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "PublicSubnet1CidrBlock": {
      "Type": "String",
      "Default": "192.168.0.0/24",
      "Description": "The IPv4 CIDR block to be used for Public Subnet 1.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "PublicSubnet2CidrBlock": {
      "Type": "String",
      "Default": "192.168.1.0/24",
      "Description": "The IPv4 CIDR block to be used for Public Subnet 2.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "PublicSubnet3CidrBlock": {
      "Type": "String",
      "Default": "192.168.2.0/24",
      "Description": "The IPv4 CIDR block to be used for Public Subnet 3.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "MapPublicIpOnLaunch": {
      "Type": "String",
      "AllowedValues": [true, false],
      "Default": false,
      "Description": "Whether public IP addresses are assigned when EC2 Instances are launched in the public subnets."
    },
    "PrivateSubnet1CidrBlock": {
      "Type": "String",
      "Default": "192.168.3.0/24",
      "Description": "The IPv4 CIDR block to be used for Private Subnet 1.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "PrivateSubnet2CidrBlock": {
      "Type": "String",
      "Default": "192.168.4.0/24",
      "Description": "The IPv4 CIDR block to be used for Private Subnet 2.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "PrivateSubnet3CidrBlock": {
      "Type": "String",
      "Default": "192.168.5.0/24",
      "Description": "The IPv4 CIDR block to be used for Private Subnet 3.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "IncludeNat": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": ["true", "false"],
      "Description": "Creates a NAT gateway if set to 'true'. Allows instances in the private subnets to access the internet."
    },
    "IncludeDataSubnets": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": ["true", "false"],
      "Description": "Creates data subnets if set to 'true'."
    },
    "DataSubnet1CidrBlock": {
      "Type": "String",
      "Default": "192.168.6.0/24",
      "Description": "The IPv4 CIDR block to be used for Data Subnet 1.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "DataSubnet2CidrBlock": {
      "Type": "String",
      "Default": "192.168.7.0/24",
      "Description": "The IPv4 CIDR block to be used for Data Subnet 2.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    },
    "DataSubnet3CidrBlock": {
      "Type": "String",
      "Default": "192.168.8.0/24",
      "Description": "The IPv4 CIDR block to be used for Data Subnet 3.",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$"
    }
  },
  "Conditions": {
    "CreateNatGateway": {
      "Fn::Equals": [
        {
          "Ref": "IncludeNat"
        },
        "true"
      ]
    },
    "CreateDataSubnet": {
      "Fn::Equals": [
        {
          "Ref": "IncludeDataSubnets"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "Vpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Ref": "VpcCidrBlock"
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Internet Gateway"
            }
          }
        ]
      }
    },
    "InternetGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone1"
        },
        "CidrBlock": {
          "Ref": "PublicSubnet1CidrBlock"
        },
        "MapPublicIpOnLaunch": {
          "Ref": "MapPublicIpOnLaunch"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 1"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 1 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
    "PublicSubnet1InternetGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnet1RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone2"
        },
        "CidrBlock": {
          "Ref": "PublicSubnet2CidrBlock"
        },
        "MapPublicIpOnLaunch": {
          "Ref": "MapPublicIpOnLaunch"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 2"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 2 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      }
    },
    "PublicSubnet2InternetGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnet2RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone3"
        },
        "CidrBlock": {
          "Ref": "PublicSubnet3CidrBlock"
        },
        "MapPublicIpOnLaunch": {
          "Ref": "MapPublicIpOnLaunch"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 3"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 3 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PublicSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet3"
        }
      }
    },
    "PublicSubnet3InternetGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicSubnet3RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone1"
        },
        "CidrBlock": {
          "Ref": "PrivateSubnet1CidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Private Subnet 1"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PrivateSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Private Subnet 1 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PrivateSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet1"
        }
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone2"
        },
        "CidrBlock": {
          "Ref": "PrivateSubnet2CidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Private Subnet 2"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PrivateSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Private Subnet 2 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PrivateSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet2"
        }
      }
    },
    "PrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone3"
        },
        "CidrBlock": {
          "Ref": "PrivateSubnet3CidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Private Subnet 3"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PrivateSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Private Subnet 3 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "PrivateSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "PrivateSubnet3"
        }
      }
    },
    "NatGateway1ElasticIp": {
      "Type": "AWS::EC2::EIP",
      "Condition": "CreateNatGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 1 NAT Gateway Elastic IP"
            }
          }
        ]
      }
    },
    "NatGateway1": {
      "Type": "AWS::EC2::NatGateway",
      "Condition": "CreateNatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": ["NatGateway1ElasticIp", "AllocationId"]
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 1 NAT Gateway"
            }
          }
        ]
      }
    },
    "PrivateSubnet1NatGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Condition": "CreateNatGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet1RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NatGateway1"
        }
      }
    },
    "NatGateway2ElasticIp": {
      "Type": "AWS::EC2::EIP",
      "Condition": "CreateNatGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 2 NAT Gateway Elastic IP"
            }
          }
        ]
      }
    },
    "NatGateway2": {
      "Type": "AWS::EC2::NatGateway",
      "Condition": "CreateNatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": ["NatGateway2ElasticIp", "AllocationId"]
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 2 NAT Gateway"
            }
          }
        ]
      }
    },
    "PrivateSubnet2NatGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Condition": "CreateNatGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet2RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NatGateway2"
        }
      }
    },
    "NatGateway3ElasticIp": {
      "Type": "AWS::EC2::EIP",
      "Condition": "CreateNatGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 3 NAT Gateway Elastic IP"
            }
          }
        ]
      }
    },
    "NatGateway3": {
      "Type": "AWS::EC2::NatGateway",
      "Condition": "CreateNatGateway",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": ["NatGateway3ElasticIp", "AllocationId"]
        },
        "SubnetId": {
          "Ref": "PublicSubnet3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Public Subnet 3 NAT Gateway"
            }
          }
        ]
      }
    },
    "PrivateSubnet3NatGatewayRoute": {
      "Type": "AWS::EC2::Route",
      "Condition": "CreateNatGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateSubnet3RouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NatGateway3"
        }
      }
    },
    "DataSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone1"
        },
        "CidrBlock": {
          "Ref": "DataSubnet1CidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Data Subnet 1"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "DataSubnet1RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Data Subnet 1 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "DataSubnet1RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "RouteTableId": {
          "Ref": "DataSubnet1RouteTable"
        },
        "SubnetId": {
          "Ref": "DataSubnet1"
        }
      }
    },
    "DataSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone2"
        },
        "CidrBlock": {
          "Ref": "DataSubnet2CidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Data Subnet 2"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "DataSubnet2RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Data Subnet 2 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "DataSubnet2RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "RouteTableId": {
          "Ref": "DataSubnet2RouteTable"
        },
        "SubnetId": {
          "Ref": "DataSubnet2"
        }
      }
    },
    "DataSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "AvailabilityZone": {
          "Ref": "AvailabilityZone3"
        },
        "CidrBlock": {
          "Ref": "DataSubnet3CidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Data Subnet 3"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "DataSubnet3RouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Data Subnet 3 Route Table"
            }
          }
        ],
        "VpcId": {
          "Ref": "Vpc"
        }
      }
    },
    "DataSubnet3RouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Condition": "CreateDataSubnet",
      "Properties": {
        "RouteTableId": {
          "Ref": "DataSubnet3RouteTable"
        },
        "SubnetId": {
          "Ref": "DataSubnet3"
        }
      }
    }
  },
  "Outputs": {
    "Vpc": {
      "Description": "The resource ID of the VPC.",
      "Value": {
        "Ref": "Vpc"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-Vpc"
        }
      }
    },
    "VpcCidrBlock": {
      "Description": "The IPv4 CIDR block of the VPC.",
      "Value": {
        "Ref": "VpcCidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VpcCidrBlock"
        }
      }
    },
    "DefaultNetworkAcl": {
      "Description": "The default Network ACL ID of the VPC.",
      "Value": {
        "Fn::GetAtt": ["Vpc", "DefaultNetworkAcl"]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DefaultNetworkAcl"
        }
      }
    },
    "DefaultSecurityGroup": {
      "Description": "The default Security Group ID of the VPC.",
      "Value": {
        "Fn::GetAtt": ["Vpc", "DefaultSecurityGroup"]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DefaultSecurityGroup"
        }
      }
    },
    "PublicSubnet1": {
      "Description": "The resource ID of Public Subnet 1.",
      "Value": {
        "Ref": "PublicSubnet1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet1"
        }
      }
    },
    "PublicSubnet2": {
      "Description": "The resource ID of Public Subnet 2.",
      "Value": {
        "Ref": "PublicSubnet2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet2"
        }
      }
    },
    "PublicSubnet3": {
      "Description": "The resource ID of Public Subnet 3.",
      "Value": {
        "Ref": "PublicSubnet3"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet3"
        }
      }
    },
    "PublicSubnet1CidrBlock": {
      "Description": "The IPv4 CIDR block of Public Subnet 1.",
      "Value": {
        "Ref": "PublicSubnet1CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet1CidrBlock"
        }
      }
    },
    "PublicSubnet2CidrBlock": {
      "Description": "The IPv4 CIDR block of Public Subnet 2.",
      "Value": {
        "Ref": "PublicSubnet2CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet2CidrBlock"
        }
      }
    },
    "PublicSubnet3CidrBlock": {
      "Description": "The IPv4 CIDR block of Public Subnet 3.",
      "Value": {
        "Ref": "PublicSubnet3CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet3CidrBlock"
        }
      }
    },
    "PublicSubnet1RouteTable": {
      "Description": "The resource ID of the Route Table for Public Subnet 1.",
      "Value": {
        "Ref": "PublicSubnet1RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet1RouteTable"
        }
      }
    },
    "PublicSubnet2RouteTable": {
      "Description": "The resource ID of the Route Table for Public Subnet 2.",
      "Value": {
        "Ref": "PublicSubnet2RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet2RouteTable"
        }
      }
    },
    "PublicSubnet3RouteTable": {
      "Description": "The resource ID of the Route Table for Public Subnet 3.",
      "Value": {
        "Ref": "PublicSubnet3RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet3RouteTable"
        }
      }
    },
    "PrivateSubnet1": {
      "Description": "The resource ID of Private Subnet 1.",
      "Value": {
        "Ref": "PrivateSubnet1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet1"
        }
      }
    },
    "PrivateSubnet2": {
      "Description": "The resource ID of Private Subnet 2.",
      "Value": {
        "Ref": "PrivateSubnet2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet2"
        }
      }
    },
    "PrivateSubnet3": {
      "Description": "The resource ID of Private Subnet 3.",
      "Value": {
        "Ref": "PrivateSubnet3"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet3"
        }
      }
    },
    "PrivateSubnet1CidrBlock": {
      "Description": "The IPv4 CIDR block of Private Subnet 1.",
      "Value": {
        "Ref": "PrivateSubnet1CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet1CidrBlock"
        }
      }
    },
    "PrivateSubnet2CidrBlock": {
      "Description": "The IPv4 CIDR block of Private Subnet 2.",
      "Value": {
        "Ref": "PrivateSubnet2CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet2CidrBlock"
        }
      }
    },
    "PrivateSubnet3CidrBlock": {
      "Description": "The IPv4 CIDR block of Private Subnet 3.",
      "Value": {
        "Ref": "PrivateSubnet3CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet3CidrBlock"
        }
      }
    },
    "PrivateSubnet1RouteTable": {
      "Description": "The resource ID of the Route Table for Private Subnet 1.",
      "Value": {
        "Ref": "PrivateSubnet1RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet1RouteTable"
        }
      }
    },
    "PrivateSubnet2RouteTable": {
      "Description": "The resource ID of the Route Table for Private Subnet 2.",
      "Value": {
        "Ref": "PrivateSubnet2RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet2RouteTable"
        }
      }
    },
    "PrivateSubnet3RouteTable": {
      "Description": "The resource ID of the Route Table for Private Subnet 3.",
      "Value": {
        "Ref": "PrivateSubnet3RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet3RouteTable"
        }
      }
    },
    "DataSubnet1": {
      "Condition": "CreateDataSubnet",
      "Description": "The resource ID of Data Subnet 1.",
      "Value": {
        "Ref": "DataSubnet1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet1"
        }
      }
    },
    "DataSubnet2": {
      "Condition": "CreateDataSubnet",
      "Description": "The resource ID of Data Subnet 2.",
      "Value": {
        "Ref": "DataSubnet2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet2"
        }
      }
    },
    "DataSubnet3": {
      "Condition": "CreateDataSubnet",
      "Description": "The resource ID of Data Subnet 3.",
      "Value": {
        "Ref": "DataSubnet3"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet3"
        }
      }
    },
    "DataSubnet1CidrBlock": {
      "Condition": "CreateDataSubnet",
      "Description": "The IPv4 CIDR block of Data Subnet 1.",
      "Value": {
        "Ref": "DataSubnet1CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet1CidrBlock"
        }
      }
    },
    "DataSubnet2CidrBlock": {
      "Condition": "CreateDataSubnet",
      "Description": "The IPv4 CIDR block of Data Subnet 2.",
      "Value": {
        "Ref": "DataSubnet2CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet2CidrBlock"
        }
      }
    },
    "DataSubnet3CidrBlock": {
      "Condition": "CreateDataSubnet",
      "Description": "The IPv4 CIDR block of Data Subnet 3.",
      "Value": {
        "Ref": "DataSubnet3CidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet3CidrBlock"
        }
      }
    },
    "DataSubnet1RouteTable": {
      "Condition": "CreateDataSubnet",
      "Description": "The resource ID of the Route Table for Data Subnet 1.",
      "Value": {
        "Ref": "DataSubnet1RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet1RouteTable"
        }
      }
    },
    "DataSubnet2RouteTable": {
      "Condition": "CreateDataSubnet",
      "Description": "The resource ID of the Route Table for Data Subnet 2.",
      "Value": {
        "Ref": "DataSubnet2RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet2RouteTable"
        }
      }
    },
    "DataSubnet3RouteTable": {
      "Condition": "CreateDataSubnet",
      "Description": "The resource ID of the Route Table for Data Subnet 3.",
      "Value": {
        "Ref": "DataSubnet3RouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DataSubnet3RouteTable"
        }
      }
    }
  }
}
