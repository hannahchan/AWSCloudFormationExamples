{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "An Aurora serverless database cluster.",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": { "default": "Credentials" },
          "Parameters": ["MasterUsername", "MasterUserPassword"]
        },
        {
          "Label": { "default": "Cluster Configuration" },
          "Parameters": [
            "Engine",
            "DeletionProtection",
            "MinCapacity",
            "MaxCapacity",
            "AutoPause",
            "SecondsUntilAutoPause"
          ]
        },
        {
          "Label": { "default": "Network Connectivity" },
          "Parameters": ["Vpc", "SubnetIds", "EnableHttpEndpoint"]
        },
        {
          "Label": { "default": "Maintenance and Backup" },
          "Parameters": ["BackupRetentionPeriod"]
        },
        { "Label": { "default": "Encryption" }, "Parameters": ["KmsKeyId"] },
        {
          "Label": { "default": "Parameter Groups" },
          "Parameters": ["DBClusterParameterGroupName"]
        }
      ],
      "ParameterLabels": {
        "MasterUsername": { "default": "Master Username" },
        "MasterUserPassword": { "default": "Master User Password" },
        "Engine": { "default": "Database Engine" },
        "DeletionProtection": { "default": "Deletion Protection" },
        "MinCapacity": { "default": "Minimum Aurora Capacity Unit" },
        "MaxCapacity": { "default": "Maximum Aurora Capacity Unit" },
        "AutoPause": { "default": "Auto Pause" },
        "SecondsUntilAutoPause": { "default": "Auto Pause Seconds" },
        "Vpc": { "default": "VPC" },
        "SubnetIds": { "default": "Subnet IDs" },
        "EnableHttpEndpoint": { "default": "Enable HTTP Endpoint (Data API)" },
        "BackupRetentionPeriod": { "default": "Backup Retention Period" },
        "KmsKeyId": { "default": "KMS Key" },
        "DBClusterParameterGroupName": {
          "default": "Database Cluster Parameter Group Name"
        }
      }
    }
  },
  "Parameters": {
    "MasterUsername": {
      "Type": "String",
      "Default": "",
      "Description": "The username for the master user of the serverless database cluster."
    },
    "MasterUserPassword": {
      "Type": "String",
      "NoEcho": true,
      "Description": "The password for the master user of the serverless database cluster."
    },
    "Engine": {
      "Type": "String",
      "Default": "aurora",
      "AllowedValues": ["aurora", "aurora-mysql", "aurora-postgresql"],
      "Description": "The database engine to be used for the serverless database cluster."
    },
    "DeletionProtection": {
      "Type": "String",
      "Default": false,
      "AllowedValues": [true, false],
      "Description": "Enables deletion protection if set to 'true'."
    },
    "MinCapacity": {
      "Type": "Number",
      "Default": 2,
      "AllowedValues": [1, 2, 4, 8, 16, 32, 64, 128, 192, 256, 384],
      "Description": "The minimum Aurora capacity unit for the serverless database cluster."
    },
    "MaxCapacity": {
      "Type": "Number",
      "Default": 16,
      "AllowedValues": [1, 2, 4, 8, 16, 32, 64, 128, 192, 256, 384],
      "Description": "The maximum Aurora capacity unit for the serverless database cluster."
    },
    "AutoPause": {
      "Type": "String",
      "Default": true,
      "AllowedValues": [true, false],
      "Description": "Allows the compute capacity of the database to be paused (scale to zero) if set to 'true'."
    },
    "SecondsUntilAutoPause": {
      "Type": "Number",
      "Default": 300,
      "MinValue": 300,
      "MaxValue": 86400,
      "Description": "The amount of time in seconds of database inactivity before compute capacity is paused."
    },
    "Vpc": {
      "Type": "AWS::EC2::VPC::Id",
      "Description": "The VPC to create the serverless database in."
    },
    "SubnetIds": {
      "Type": "List<AWS::EC2::Subnet::Id>",
      "Description": "The list of subnets to create the serverless database endpoints in."
    },
    "EnableHttpEndpoint": {
      "Type": "String",
      "Default": false,
      "AllowedValues": [true, false],
      "Description": "Enables a HTTP endpoint for the serverless database if set to 'true'."
    },
    "BackupRetentionPeriod": {
      "Type": "Number",
      "Default": 7,
      "MinValue": 1,
      "MaxValue": 35,
      "Description": "The number of days for which automated backups are retained."
    },
    "KmsKeyId": {
      "Type": "String",
      "Default": "",
      "Description": "The ARN of the KMS key to use for the encryption of the cluster. Leave blank to use the default KMS key."
    },
    "DBClusterParameterGroupName": {
      "Type": "String",
      "Default": "",
      "Description": "The name of the database cluster parameter group to associate with this database cluster. Leave blank to use default."
    }
  },
  "Mappings": {
    "Engine": {
      "aurora": {
        "DefaultDBClusterParameterGroupName": "default.aurora5.6",
        "DefaultDBParameterGroupName": "default.aurora5.6",
        "DefaultMasterUsername": "root",
        "Family": "aurora5.6",
        "Port": 3306
      },
      "aurora-mysql": {
        "DefaultDBClusterParameterGroupName": "default.aurora-mysql5.7",
        "DefaultDBParameterGroupName": "default.aurora-mysql5.7",
        "DefaultMasterUsername": "root",
        "Family": "aurora-mysql5.7",
        "Port": 3306
      },
      "aurora-postgresql": {
        "DefaultDBClusterParameterGroupName": "default.aurora-postgresql10",
        "DefaultDBParameterGroupName": "default.aurora-postgresql10",
        "DefaultMasterUsername": "postgres",
        "Family": "aurora-postgresql10",
        "Port": 5432
      }
    }
  },
  "Conditions": {
    "UseDefaultDBClusterParameterGroupName": {
      "Fn::Equals": [{ "Ref": "DBClusterParameterGroupName" }, ""]
    },
    "UseDefaultMasterUsername": {
      "Fn::Equals": [{ "Ref": "MasterUsername" }, ""]
    },
    "UseKmsKey": { "Fn::Not": [{ "Fn::Equals": [{ "Ref": "KmsKeyId" }, ""] }] }
  },
  "Resources": {
    "SecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": {
          "Fn::Sub": "Controls access to Aurora serverless database - ${AWS::StackName}"
        },
        "GroupName": {
          "Fn::Sub": "${AWS::StackName} - Database Security Group"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Sub": "${AWS::StackName} - Database Security Group"
            }
          }
        ],
        "VpcId": { "Ref": "Vpc" }
      }
    },
    "DBSubnetGroup": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": {
          "Fn::Sub": "Database Subnets for Aurora serverless database - ${AWS::StackName}"
        },
        "SubnetIds": { "Ref": "SubnetIds" }
      }
    },
    "DBCluster": {
      "Type": "AWS::RDS::DBCluster",
      "Properties": {
        "BackupRetentionPeriod": { "Ref": "BackupRetentionPeriod" },
        "DBClusterParameterGroupName": {
          "Fn::If": [
            "UseDefaultDBClusterParameterGroupName",
            {
              "Fn::FindInMap": [
                "Engine",
                { "Ref": "Engine" },
                "DefaultDBClusterParameterGroupName"
              ]
            },
            { "Ref": "DBClusterParameterGroupName" }
          ]
        },
        "DBSubnetGroupName": { "Ref": "DBSubnetGroup" },
        "DeletionProtection": { "Ref": "DeletionProtection" },
        "EnableHttpEndpoint": { "Ref": "EnableHttpEndpoint" },
        "Engine": { "Ref": "Engine" },
        "EngineMode": "serverless",
        "KmsKeyId": {
          "Fn::If": [
            "UseKmsKey",
            { "Ref": "KmsKeyId" },
            { "Ref": "AWS::NoValue" }
          ]
        },
        "MasterUsername": {
          "Fn::If": [
            "UseDefaultMasterUsername",
            {
              "Fn::FindInMap": [
                "Engine",
                { "Ref": "Engine" },
                "DefaultMasterUsername"
              ]
            },
            { "Ref": "MasterUsername" }
          ]
        },
        "MasterUserPassword": { "Ref": "MasterUserPassword" },
        "ScalingConfiguration": {
          "AutoPause": { "Ref": "AutoPause" },
          "MaxCapacity": { "Ref": "MaxCapacity" },
          "MinCapacity": { "Ref": "MinCapacity" },
          "SecondsUntilAutoPause": { "Ref": "SecondsUntilAutoPause" }
        },
        "StorageEncrypted": true,
        "VpcSecurityGroupIds": [{ "Ref": "SecurityGroup" }]
      }
    }
  },
  "Outputs": {
    "SecurityGroup": {
      "Description": "The resource ID of the serverless database Security Group.",
      "Value": { "Ref": "SecurityGroup" },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-SecurityGroup" } }
    },
    "ClusterEndpoint": {
      "Description": "The read/write endpoint for the serverless database cluster.",
      "Value": { "Fn::GetAtt": ["DBCluster", "Endpoint.Address"] },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-DBClusterEndpoint" } }
    },
    "ClusterPort": {
      "Description": "The port used for the serverless database cluster.",
      "Value": { "Fn::GetAtt": ["DBCluster", "Endpoint.Port"] },
      "Export": { "Name": { "Fn::Sub": "${AWS::StackName}-DBClusterPort" } }
    }
  }
}
